# DEVELOPMENT ONLY - DO NOT USE IN PRODUCTION
# This file contains default credentials for development
# For production, use docker-compose.prod.yml with proper environment variables
# Copy this to docker-compose.yml and add your API keys

services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: raresift
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - uploads_data:/app/uploads
      - ./video_assets:/app/video_assets
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/raresift
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key-change-in-production
      - ENVIRONMENT=development
      # - OPENAI_API_KEY=your-openai-api-key-here
    depends_on:
      - postgres
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery:
    build: ./backend
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/raresift
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key-change-in-production
      - ENVIRONMENT=development
      # - OPENAI_API_KEY=your-openai-api-key-here
    depends_on:
      - postgres
      - redis
    command: celery -A app.tasks.celery_app worker --loglevel=info

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  uploads_data: 